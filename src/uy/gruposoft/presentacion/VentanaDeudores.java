/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uy.gruposoft.presentacion;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import uy.gruposoft.excepciones.AfiliadoException;
import uy.gruposoft.excepciones.DeudorException;
import uy.gruposoft.logica.Afiliado;
import uy.gruposoft.logica.Afiliados;
import uy.gruposoft.logica.Deudor;
import uy.gruposoft.logica.Deudores;
import uy.gruposoft.logica.FachadaLogica;

/**
 *
 * @author andressantucci
 */
public class VentanaDeudores extends javax.swing.JInternalFrame {

    
    
    public Deudor deudorSeleccionado = new Deudor();
    
    /**
     * Creates new form VentanaDeudores
     */
    public VentanaDeudores() throws DeudorException, SQLException {
        initComponents();
        mostrarDeudores();
    }
    
    
    
    public static void mostrarDeudores() throws DeudorException, SQLException {

        String[] nombresColumnas = {"ci_afiliado", "cant_meses"};
        Deudores deudores = FachadaLogica.cargarDeudores();
        DefaultTableModel modelo = new DefaultTableModel(null, nombresColumnas) {
        
            public boolean isCellEditable(int row, int col){
                if (col == 0 || col == 1)
                    return false;
                else 
                    return true;
            }
        };
        
        

        Object[] fila = new Object[modelo.getColumnCount()];

        for (int i = 0; i < deudores.getDeudores().size(); i++) {
            fila[0] = deudores.getDeudores().get(i).getCiAfiliado();
            fila[1] = deudores.getDeudores().get(i).getCantMeses();

            modelo.addRow(fila);

        }
        tabla.setModel(modelo);

        tabla.getColumnModel().getColumn(0).setPreferredWidth(20);
        tabla.getColumnModel().getColumn(1).setPreferredWidth(60);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtbuscar = new javax.swing.JTextField();
        aumentar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        ingreso_meses = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        insertarDeudor = new javax.swing.JButton();
        ingreso_ci1 = new javax.swing.JTextField();
        ingreso_ci = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        disminuir = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        consultar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        txtbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbuscarActionPerformed(evt);
            }
        });
        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbuscarKeyReleased(evt);
            }
        });

        aumentar.setText("+");
        aumentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aumentarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminarMouseClicked(evt);
            }
        });
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Negocio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("ci Afiliado");

        ingreso_meses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingreso_mesesActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("cantidad de  meses");

        insertarDeudor.setActionCommand("Añadir Deudor");
        insertarDeudor.setLabel("Añadir Deudor");
        insertarDeudor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarDeudorinsertarLocal2ActionPerformed(evt);
            }
        });

        ingreso_ci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingreso_ciActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(4, 4, 4))
                    .addComponent(jLabel12))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(insertarDeudor)
                    .addComponent(ingreso_meses, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addComponent(ingreso_ci))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ingreso_ci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingreso_meses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(130, 130, 130)
                .addComponent(insertarDeudor)
                .addContainerGap(232, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista De Deudores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N
        jPanel1.setLayout(new java.awt.BorderLayout());

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        tabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        disminuir.setText("-");
        disminuir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disminuirActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("Modificar meses");

        consultar.setText("Consultar CI");
        consultar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consultarMouseClicked(evt);
            }
        });
        consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()

                        .addGap(12, 12, 12)
                        .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(consultar)
                        .addGap(112, 112, 112)

                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(disminuir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aumentar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eliminar)
                        .addGap(0, 42, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 24, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(aumentar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(eliminar))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(disminuir, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17)
                                .addComponent(consultar)
                                .addComponent(txtbuscar)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbuscarActionPerformed

    private void txtbuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyReleased
//        if(txtbuscar.getText().equals("")){
//            try {
//                mostrarLocales();
//            } catch (LocalException ex) {
//                Logger.getLogger(VentanaDeUsuario.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }else{
//            try {
//                buscarLocales();
//            } catch (LocalException ex) {
//                Logger.getLogger(VentanaDeUsuario.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
    }//GEN-LAST:event_txtbuscarKeyReleased

    private void aumentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aumentarActionPerformed

        int seleccion = tabla.getSelectedRowCount();

        if (seleccion == 1) {
            if (tabla.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(this, "Por favor seleccione un deudor");
            } else {
                try {
                    int meses = deudorSeleccionado.getCantMeses();
                    meses++;
                    deudorSeleccionado.setCantMeses(meses);
                    FachadaLogica.modificarDeuda(deudorSeleccionado);

                } catch (DeudorException ex) {
                    Logger.getLogger(VentanaLocales.class.getName()).log(Level.SEVERE, null, ex);

                }
                JOptionPane.showMessageDialog(this, "Registro Modificado Correctamente");
                try {
                    mostrarDeudores();
                } catch (DeudorException ex) {
                    Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        }else{
            JOptionPane.showMessageDialog(this, "no hay fila seleccionada");
        }

    }//GEN-LAST:event_aumentarActionPerformed

    private void eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarMouseClicked
        // TODO add your handling code here:

        int seleccion = tabla.getSelectedRowCount();
        try {
            if (seleccion == 1) {
                int res = JOptionPane.showConfirmDialog(null, "¿Desea Eliminar el Deudor?" , "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (res == JOptionPane.YES_OPTION) {

                    FachadaLogica.eliminarDeudor(deudorSeleccionado);
                    
                  
                      
                      
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe Seleccionar Fila");
            }

        } catch (DeudorException ex) {
            Logger.getLogger(VentanaDeUsuario.class.getName()).log(Level.SEVERE, null, ex);

        }

        try {
            mostrarDeudores();
        } catch (DeudorException ex) {
            Logger.getLogger(VentanaDeUsuario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_eliminarMouseClicked



    private void insertarDeudorinsertarLocal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarDeudorinsertarLocal2ActionPerformed
        try {
            try {
                validarDeudor();
            } catch (SQLException ex) {
                Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
            } catch (AfiliadoException ex) {
                Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (DeudorException ex) {
            Logger.getLogger(VentanaDeUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_insertarDeudorinsertarLocal2ActionPerformed

    public void validarDeudor() throws DeudorException, SQLException, AfiliadoException{
        
        
        String ci_afiliado = this.ingreso_ci.getText();
        String cant_meses = this.ingreso_meses.getText();
        


        if (ci_afiliado.compareTo("")!=0 && cant_meses.compareTo("")!=0)
        {
        boolean isNumeric1 =  ci_afiliado.matches("[+-]?\\d*(\\.\\d+)?");
        boolean isNumeric2 =  cant_meses.matches("[+-]?\\d*(\\.\\d+)?");
        if (isNumeric1 && isNumeric2)
        {   
            int ci = Integer.parseInt(ci_afiliado);
            int meses = Integer.parseInt(cant_meses);
            
            
            Afiliados aux = FachadaLogica.cargarAfiliados();
         
            ArrayList<Afiliado> afiliados = aux.getAfiliados();
            
            Boolean encontrado = false;
            
            for(int i = 0; i < afiliados.size(); i++ )
            {
                Afiliado afiliado = afiliados.get(i);
                if (afiliado.getCedula() == ci)
                {
                    encontrado = true;
                    break;
                }
            }
            
            if (encontrado)
            {
                
                Deudor deudor = new Deudor();

                deudor.setCiAfiliado(ci);
                deudor.setCantMeses(meses);


                if (FachadaLogica.verificarDeudor(deudor)){
                    JOptionPane.showMessageDialog(this, " Ya esta ingresado ese deudor, si quiere cambiar la cantidad de meses de deuda, modifique el registro.");

                }
                else{
                    FachadaLogica.insertarDeudor(deudor);
                    JOptionPane.showMessageDialog(this, "El Deudor se ingreso correctamente");
                    mostrarDeudores();

                }
            }else{
                JOptionPane.showMessageDialog(this, "No existe un afiliado con ese numero de cedula");

            }
             
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Ingrese un caracter valido para el numero del local");            
        }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Ingrese caracteres validos");    
        }
        
        
    }
    
    
    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int nro = (int) tabla.getValueAt(tabla.getSelectedRow(), 0);

        int meses = (int) tabla.getValueAt(tabla.getSelectedRow(), 1);

        deudorSeleccionado.setCiAfiliado(nro);
        deudorSeleccionado.setCantMeses(meses);
    }//GEN-LAST:event_tablaMouseClicked

    private void tablaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaKeyReleased
        // TODO add your handling code here:
//        int key = evt.getKeyCode();
//        if (key == KeyEvent.VK_ENTER) {
//
//            int numero = (int) tabla.getValueAt(tabla.getSelectedRow(), 0);
//
//            String negocio = tabla.getValueAt(tabla.getSelectedRow(), 1).toString();
//
//            String encargado = tabla.getValueAt(tabla.getSelectedRow(), 2).toString();
//
//            localSeleccionado.setNumeroLocal(numero);
//            localSeleccionado.setNombreNegocio(negocio);
//            localSeleccionado.setEncargado(encargado);
//
//        }
//
//        }
//
//        public static boolean caracteresValidos(String datos) {
//            return datos.matches("[a-z A-Z]*");
    }//GEN-LAST:event_tablaKeyReleased

    private void ingreso_mesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingreso_mesesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingreso_mesesActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eliminarActionPerformed

    private void disminuirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disminuirActionPerformed
        // TODO add your handling code here:
        int seleccion = tabla.getSelectedRowCount();
        boolean controlador = false;
        if (seleccion == 1) {
            if (tabla.getSelectedRow() < 0) {
                JOptionPane.showMessageDialog(this, "Por favor seleccione un deudor");
            } else {
                try {
                    int meses = deudorSeleccionado.getCantMeses();
                    meses--;
                    
                    if (meses <= 0)
                    {
                        FachadaLogica.eliminarDeudor(deudorSeleccionado);
                        controlador = true;
                    }
                    else{
                        deudorSeleccionado.setCantMeses(meses);
                        FachadaLogica.modificarDeuda(deudorSeleccionado);
                    }

                } catch (DeudorException ex) {
                    Logger.getLogger(VentanaLocales.class.getName()).log(Level.SEVERE, null, ex);

                }
            
                if(controlador)
                {
                
                    JOptionPane.showMessageDialog(this, "El deudor se elimino al no tener mas deuda");
                    try {
                        mostrarDeudores();
                    } catch (DeudorException ex) {
                        Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else{
                    try {
                        JOptionPane.showMessageDialog(this, "Registro Modificado Correctamente");
                        mostrarDeudores();
                    } catch (DeudorException ex) {
                        Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
                    

            }

        }else{
            JOptionPane.showMessageDialog(this, "no hay fila seleccionada");
        }
        
    }//GEN-LAST:event_disminuirActionPerformed

    private void consultarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_consultarMouseClicked

    private void consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarActionPerformed
        // TODO add your handling code here:
        
        String cedula = this.txtbuscar.getText();
        

        boolean isNumeric =  cedula.matches("[+-]?\\d*(\\.\\d+)?");

        
        if (isNumeric)
        {   
            int ci = Integer.parseInt(cedula);
           
            Deudores aux = null;
            try {
                aux = FachadaLogica.cargarDeudores();
            } catch (DeudorException ex) {
                Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
            }
         
            ArrayList<Deudor> deudores = aux.getDeudores();
            
            Boolean encontrado = false;
            
            for(int i = 0; i < deudores.size(); i++ )
            {
                Deudor deudor = deudores.get(i);
                if (deudor.getCiAfiliado() == ci)
                {
                    encontrado = true;
                    break;
                }
            }
            
            if (encontrado)
            {
                
                // es deudor, busco el afiliado asociado:
                Afiliados aux2 = null;
                try {
                    aux2 = FachadaLogica.cargarAfiliados();
                } catch (AfiliadoException ex) {
                    Logger.getLogger(VentanaDeudores.class.getName()).log(Level.SEVERE, null, ex);
                }
         
                ArrayList<Afiliado> afiliados = aux2.getAfiliados();
            
                Boolean encontrado2 = false;
                Afiliado afiliado = null;
                for(int i = 0; i < afiliados.size(); i++ )
                {
                    afiliado = afiliados.get(i);
                    if (afiliado.getCedula() == ci)
                    {
                        encontrado2 = true;
                        break;
                        
                    }
                }
               
                
                JOptionPane.showMessageDialog(this, "El deudor consultado refuere al afiliado con nombre: " + afiliado.getNombre() + " y email: " + afiliado.getMail());

                
            }else{
                JOptionPane.showMessageDialog(this, "No existe un deudor con ese numero de cedula");

            }
             
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Ingrese un caracter valido para el numero de cedula ");            
        }

    }//GEN-LAST:event_consultarActionPerformed

    private void ingreso_ciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingreso_ciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingreso_ciActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aumentar;
    private javax.swing.JButton consultar;
    private javax.swing.JButton disminuir;
    private javax.swing.JButton eliminar;
    private javax.swing.JTextField ingreso_ci;
    private javax.swing.JTextField ingreso_ci1;
    private javax.swing.JTextField ingreso_meses;
    private javax.swing.JButton insertarDeudor;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tabla;
    private javax.swing.JTextField txtbuscar;
    // End of variables declaration//GEN-END:variables
}
